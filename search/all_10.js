var searchData=
[
  ['the_20algorithm_20database_322',['The Algorithm Database',['../algorithmDatabase.html',1,'developerGuide']]],
  ['targets_323',['targets',['../classmango_1_1Least__squares__solver.html#a26813659bd7b52b1844080d23446a799',1,'mango::Least_squares_solver']]],
  ['test_5fcase_324',['TEST_CASE',['../algorithms__tests_8cpp.html#a3ed96915dc11e56a2a2e588379f2268f',1,'TEST_CASE(&quot;does_algorithm_exist(): Verify that return value is true for all the algorithms.&quot;,&quot;[algorithms]&quot;):&#160;algorithms_tests.cpp'],['../algorithms__tests_8cpp.html#a0d4c5222e94cfe3b589463fa1ab97e7f',1,'TEST_CASE(&quot;does_algorithm_exist(): Verify that return value is false for a bunch of strings that are not algorithm names.&quot;,&quot;[algorithms]&quot;):&#160;algorithms_tests.cpp'],['../algorithms__tests_8cpp.html#acc74683c08c2165bc457f955f269e8c1',1,'TEST_CASE(&quot;get_algorithm(): Verify that return value is consistent with the algorithms array.&quot;,&quot;[algorithms]&quot;):&#160;algorithms_tests.cpp'],['../mpi__partition__tests_8cpp.html#a95d7147667c6497c778c17450f4adae4',1,'TEST_CASE(&quot;MPI_Partition: Verify that calling getters before initialization causes exceptions&quot;,&quot;[mpi_partition]&quot;):&#160;mpi_partition_tests.cpp'],['../mpi__partition__tests_8cpp.html#a0617ccfd9d04338793e03b0f34234a61',1,'TEST_CASE(&quot;MPI_Partition.init(): Verify that all the properties make sense when N_worker_groups=1.&quot;,&quot;[mpi_partition]&quot;):&#160;mpi_partition_tests.cpp'],['../mpi__partition__tests_8cpp.html#a365d839872d64afae58ae6656916f655',1,'TEST_CASE(&quot;MPI_Partition.init(): Verify that all the properties make sense when N_worker_groups=N_procs_world or more, or when N_worker_groups &lt;= 0.&quot;,&quot;[mpi_partition]&quot;):&#160;mpi_partition_tests.cpp'],['../mpi__partition__tests_8cpp.html#a1a9388bb0cd40550ed771acc62425c65',1,'TEST_CASE(&quot;MPI_Partition.init(): Verify that for any choice of N_worker_groups, parameters are within the expected ranges.&quot;,&quot;[mpi_partition]&quot;):&#160;mpi_partition_tests.cpp'],['../mpi__partition__tests_8cpp.html#aeed2419729516c58a4752faec49c10ff',1,'TEST_CASE(&quot;MPI_Partition.set_custom(): Verify that parameters are correct for the case in which every proc is a group leader.&quot;,&quot;[mpi_partition]&quot;):&#160;mpi_partition_tests.cpp'],['../mpi__partition__tests_8cpp.html#a7c60f49e814a10225e9eb92d2d26dc0a',1,'TEST_CASE(&quot;MPI_Partition.set_custom(): Verify that parameters are correct for the case in which there is a single worker group.&quot;,&quot;[mpi_partition]&quot;):&#160;mpi_partition_tests.cpp'],['../mpi__partition__tests_8cpp.html#a40530cdb76a421195699ffaee91f0647',1,'TEST_CASE(&quot;MPI_Partition.set_custom(): Verify that for any choice of N_worker_groups, if we generate communicators using MPI_Partition.init() and supply them as inputs to set_custom(), the results of set_custom() are identical to init().&quot;,&quot;[mpi_partition]&quot;):&#160;mpi_partition_tests.cpp']]],
  ['test_5fcase_5fmethod_325',['TEST_CASE_METHOD',['../finite__difference__tests_8cpp.html#ab226744b7a6bf30ebe3202b80664828b',1,'TEST_CASE_METHOD(mango::Solver, &quot;Solver::finite_difference_gradient()&quot;,&quot;[Solver][finite difference]&quot;):&#160;finite_difference_tests.cpp'],['../finite__difference__tests_8cpp.html#ade9de72f926e5027d68ae7e8fe3805fa',1,'TEST_CASE_METHOD(mango::Least_squares_solver, &quot;Least_squares_solver::finite_difference_Jacobian() and problem::finite_difference_gradient()&quot;,&quot;[problem][finite difference]&quot;):&#160;finite_difference_tests.cpp']]],
  ['testing_326',['Testing',['../testing.html',1,'developerGuide']]],
  ['testing_2emd_327',['testing.md',['../testing_8md.html',1,'']]]
];
